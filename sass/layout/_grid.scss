@use "../abstracts/variables";
@use "../abstracts/mixins";

.row {
  max-width: variables.$grid-width;
  margin: 0 auto;

  //   Select everything except the last child
  &:not(:last-child) {
    margin-bottom: variables.$gutter-vertical;

    @include mixins.respond(tab-port) {
      margin-bottom: variables.$gutter-vertical-small;
    }
  }

  @include mixins.respond(tab-port) {
    // Very important - changing this makes the rows take up less space horizontally
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include mixins.clearfix;

  //   Attribute selector that selects all elements in which the class attributes start with 'col-' -- replace ^ with * for any class which contains 'col-' -- replace ^ with $ for any class which ends with 'col-'
  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: variables.$gutter-horizontal;
      @include mixins.respond(tab-port) {
        margin-right: 0;
        margin-bottom: variables.$gutter-vertical-small;
      }
    }

    @include mixins.respond(tab-port) {
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    // allows calculations where we can mix units rem w/percentages, etc. - wrap with #{} to use SASS variables, but this is possibly older syntax
    width: calc((100% - variables.$gutter-horizontal) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * variables.$gutter-horizontal) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * variables.$gutter-horizontal) / 3) +
        variables.$gutter-horizontal
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * variables.$gutter-horizontal) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * variables.$gutter-horizontal) / 4) +
        variables.$gutter-horizontal
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * variables.$gutter-horizontal) / 4) + 2 *
        variables.$gutter-horizontal
    );
  }
}
