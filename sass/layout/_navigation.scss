@use "../abstracts/variables";
@use "../abstracts/mixins";

.navigation {
  &__checkbox {
    display: none;
  }

  &__button {
    background-color: variables.$color-white;
    height: 7rem;
    width: 7rem;
    position: fixed;
    top: 6rem;
    right: 6rem;
    border-radius: 50%;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba($color: variables.$color-black, $alpha: 0.1);
    text-align: center;
    cursor: pointer;

    @include mixins.respond(tab-port) {
      top: 4rem;
      right: 4rem;
    }
    @include mixins.respond(phone) {
      top: 3rem;
      right: 3rem;
    }
  }

  &__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;
    background-image: radial-gradient(
      variables.$color-primary-light,
      variables.$color-primary-dark
    );
    // Note that z-index only works on element that have their position defined
    z-index: 1000;
    // transform: scale(80);
    transition: transform 0.8s cubic-bezier(0.83, 0, 0.17, 1);

    @include mixins.respond(tab-port) {
      top: 4.5rem;
      right: 4.5rem;
    }
    @include mixins.respond(phone) {
      top: 3.5rem;
      right: 3.5rem;
    }
  }

  &__nav {
    height: 100vh;
    // Spans entire viewport starting at top 0 and right 0
    position: fixed;
    top: 0;
    // Negative percentage cecessary to move links off the page entirely
    left: -25%;
    z-index: 1500;
    opacity: 0;
    width: 0;
    transition: all 0.8s cubic-bezier(0.68, -0.6, 0.32, 1.6);
  }

  &__list {
    position: absolute;
    top: 50%;
    // 75% needed to make up for 25% deficit needed to move links to center of page
    left: 75%;
    transform: translate(-50%, -50%);
    list-style: none;
    text-align: center;
    // Width Necessary for animation
    width: 100%;
  }

  &__item {
    margin: 1rem;
  }

  &__link {
    &:link,
    &:visited {
      // set to inline-block so that padding and translateX on hover are applied correctly
      display: inline-block;
      font-size: 3rem;
      font-weight: 300;
      color: variables.$color-white;
      padding: 1rem 2rem;
      text-decoration: none;
      text-transform: uppercase;
      background-image: linear-gradient(
        120deg,
        transparent 0%,
        transparent 50%,
        variables.$color-white 50%
      );
      //   Extra 20% because of the 120 deg set on background image
      background-size: 220%;
      transition: all 0.4s;

      span {
        margin-right: 1.5rem;
        display: inline-block;
      }
    }

    &:hover,
    &:active {
      // Background shifts to the left side
      background-position: 100%;
      color: variables.$color-primary;
      transform: translateX(1rem);
    }
  }
  // General sibling selector
  //   Functionality
  &__checkbox:checked ~ &__background {
    transform: scale(80);
  }

  &__checkbox:checked ~ &__nav {
    opacity: 1;
    width: 100%;
  }

  //   Icon
  &__icon {
    position: relative;
    margin-top: 3.5rem;
    &,
    &::before,
    &::after {
      width: 3rem;
      height: 2px;
      background-color: variables.$color-grey-dark-3;
      display: inline-block;
    }
    &::before,
    &::after {
      content: "";
      position: absolute;
      left: 0;
      transition: all 0.2s;
    }

    &::before {
      top: -0.8rem;
      //   Where to transformation begins - experiment with this one
      //   transform-origin: right;
    }
    &::after {
      top: 0.8rem;
    }
  }

  &__button:hover &__icon::before {
    top: -1rem;
  }
  &__button:hover &__icon::after {
    top: 1rem;
  }

  //   Adjacent sibling selector
  &__checkbox:checked + &__button &__icon {
    background-color: transparent;
  }
  &__checkbox:checked + &__button &__icon::before {
    top: 0;
    transform: rotate(135deg);
  }
  &__checkbox:checked + &__button &__icon::after {
    top: 0;
    transform: rotate(-135deg);
  }
}
